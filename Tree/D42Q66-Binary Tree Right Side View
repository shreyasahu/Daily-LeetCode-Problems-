//https://leetcode.com/problems/binary-tree-right-side-view/

Given the root of a binary tree, imagine yourself standing on the right side of it, 
return the values of the nodes you can see ordered from top to bottom.

       1  
    2    3
null 5  null 4 
  

Example 1:


Input: root = [1,2,3,null,5,null,4]
Output: [1,3,4]
Example 2:

Input: root = [1,null,3]
Output: [1,3]
Example 3:

Input: root = []
Output: []

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void rightview(int level,vector<int> &ans,TreeNode* root){
        if(!root)
            return ;
        if(ans.size()==level)
            ans.push_back(root->val);
        rightview(level+1,ans,root->right);
        rightview(level+1,ans,root->left);
    }
    
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans;
        rightview(0,ans,root);
        return ans;
    }
};
