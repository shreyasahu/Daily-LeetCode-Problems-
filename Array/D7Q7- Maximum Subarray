//https://leetcode.com/problems/maximum-subarray/

Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

A subarray is a contiguous part of an array.

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.




class Solution {
public:
    int maxSubArray(vector<int>& nums) 
    {
        int max = INT_MIN,sum=0;
        for(int i=0;i<nums.size();i++)
        {
            sum=sum+nums[i];
            if(sum>max)
                max=sum;
            if(sum<0)        // if suppose all are negative nos then we don't have to add nos as add negative nos will result in small no only 
                sum=0;
        }
        
        return max;
    }
};
