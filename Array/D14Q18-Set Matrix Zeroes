//https://leetcode.com/problems/set-matrix-zeroes/

Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

You must do it in place.

 

Example 1:
Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]

| 1 1 1 |         | 1 0 1 |   
| 1 0 1 |  =>     | 0 0 0 |
| 1 1 1 |         | 1 0 1 |

Example 2:

Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]

Solution Approach -

maintain 2 arrays inside matrix only 1st row and 1st column , if any of the cells in matrix is zero then 
modify these , but remember about col=1 - this you need to maintain track 
After that traverse reversely and check if any of 1st row or 1st column has 0 make cells 0
-----------------------------------------------------------------------------------------------
/**
 * @param {number[][]} matrix
 * @return {void} Do not return anything, modify matrix in-place instead.
 */
var setZeroes = function(matrix) 
{
       var col=1;
        var cols=matrix[0].length;
        var rows=matrix.length;
    
    for(let i=0;i<rows;i++)
        {
            if (matrix[i][0]==0)
                col=0;
            for(let j=1;j<cols;j++)
                {
                    if(matrix[i][j]==0)
                        {
                             matrix[i][0]=0;
                             matrix[0][j]=0;
                        }
                   
                }
        }
    
     for(let i=rows-1;i>=0;i--)
        {
            for(let j=cols-1;j>=1;j--)
                {
                    if((matrix[i][0]==0) || (matrix[0][j]==0))
                        {
                            matrix[i][j]=0;
                        }   
                }
             if(col==0)
                {
                    matrix[i][0]=0;
                }
        }  
};
