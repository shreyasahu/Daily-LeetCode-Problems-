//https://leetcode.com/problems/missing-number/

Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.

 

Example 1:

Input: nums = [3,0,1]
Output: 2
Explanation: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.

//Approach 
//using xor method , xor all elements then xor it with array from 1 to n , 
//2nd method- add all elements then minus from n*(n+1)/2 - sum of all elements 

class Solution {
public:
    int missingNumber(vector<int>& nums) 
    { 
//         int xor1=0,xor2=0;
//         for(int i=0;i<nums.size();i++)
//         xor1= nums[i]^xor1;
        
//         xor2=xor1^1;
//         for(int i=2;i<=nums.size();i++)
//         xor2= i^xor2;
        
//         return xor2;
        
        int sum=0,ans=0,n=nums.size();
        for(int i=0;i<nums.size();i++)
            sum=sum+nums[i];
        
        ans=(n*(n+1))/2;
        ans=ans-sum;
        return ans;
        
    }
};

