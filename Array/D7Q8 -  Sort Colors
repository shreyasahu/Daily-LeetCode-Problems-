//https://leetcode.com/problems/sort-colors/

Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]

// Approach is count the no of 0's 1's and 2's then put in the array accordingly 

class Solution {
public:
    void sortColors(vector<int>& nums) 
    {
        int red=0,white=0,blue=0;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==0)
                red++;
            else if (nums[i]==1)
                white++;
            else if(nums[i]==2)
                blue++;
        }
        
        //cout<<red<<" "<<white<<" "<<blue<<" ";
        int j=0;
        nums.clear();
        while(red!=0)
        {
            nums.push_back(0);
            red--;
        }
        
          while(white!=0)
        {
            nums.push_back(1);
            white--;
        }
        
           while(blue!=0)
        {
            nums.push_back(2);
            blue--;
        }
        
    }
};
