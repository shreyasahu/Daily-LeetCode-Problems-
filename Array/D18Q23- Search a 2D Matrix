//https://leetcode.com/problems/search-a-2d-matrix/

Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:

Integers in each row are sorted from left to right.
The first integer of each row is greater than the last integer of the previous row.

Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3
Output: true

Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13
Output: false


Solution- 
complexity - log n 

/**
 * @param {number[][]} matrix
 * @param {number} target
 * @return {boolean}
 */
var searchMatrix = function(matrix, target) {
     let rows = matrix.length;
    let columns= matrix[0].length;
    let temp=[];
    //let cols=0
    //let row=0,col=columns-1;
    for(let i=0;i<rows;i++)
        {
           if(target>=matrix[i][0] && target<=matrix[i][columns-1])
               temp=matrix[i];
            
        }
    return (temp.includes(target));
};
