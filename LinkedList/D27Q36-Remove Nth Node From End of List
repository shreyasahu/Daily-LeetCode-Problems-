//https://leetcode.com/problems/remove-nth-node-from-end-of-list/

Given the head of a linked list, remove the nth node from the end of the list and return its head.

Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(!head)
            return head;
        int count=0;
        ListNode*temp=head,*prev;
        while(temp){
            count++;
            temp=temp->next;
        }
        if(count==1 && n==1)
            return NULL;
        temp=head;
        ListNode *dummyhead=new ListNode();
        dummyhead->next=head;
        prev=dummyhead;
        for(int i=0;i<count-n;i++){
            prev=temp;
            temp=temp->next;
        }
        prev->next=temp->next;
        return (dummyhead->next);       
    }
};


